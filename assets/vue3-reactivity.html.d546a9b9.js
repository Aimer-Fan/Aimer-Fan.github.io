import{_ as e,r as t,o,c,a as s,b as l,e as a,d as n}from"./app.cbf35e07.js";var i="/assets/Vue3\u54CD\u5E94\u5F0F.b7006b27.jpg";const u={},r=a(`<h1 id="vue3-\u7684\u54CD\u5E94\u5F0F\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#vue3-\u7684\u54CD\u5E94\u5F0F\u539F\u7406" aria-hidden="true">#</a> Vue3 \u7684\u54CD\u5E94\u5F0F\u539F\u7406</h1><blockquote><p>Vue \u6700\u72EC\u7279\u7684\u7279\u6027\u4E4B\u4E00\uFF0C\u662F\u5176\u975E\u4FB5\u5165\u6027\u7684\u54CD\u5E94\u6027\u7CFB\u7EDF\u3002\u6570\u636E\u6A21\u578B\u662F\u88AB\u4EE3\u7406\u7684 JavaScript \u5BF9\u8C61\u3002\u800C\u5F53\u4F60\u4FEE\u6539\u5B83\u4EEC\u65F6\uFF0C\u89C6\u56FE\u4F1A\u8FDB\u884C\u66F4\u65B0\u3002</p></blockquote><p>Vue \u7684\u54CD\u5E94\u5F0F\u7CFB\u7EDF\u662F Vue \u6700\u6838\u5FC3\u7684\u90E8\u5206\uFF0C\u4E0B\u9762\u6211\u4EEC\u4E00\u8D77\u6765\u4E86\u89E3\u4E0B\u54CD\u5E94\u5F0F\u7CFB\u7EDF\u662F\u600E\u4E48\u5B9E\u73B0\u7684\u5427\u3002</p><h3 id="\u4EC0\u4E48\u662F\u54CD\u5E94\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u54CD\u5E94\u5F0F" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u54CD\u5E94\u5F0F\uFF1F</h3><p>\u5728\u4ECB\u7ECD\u54CD\u5E94\u5F0F\u539F\u7406\u4E4B\u524D\uFF0C\u6211\u60F3\u5148\u4ECB\u7ECD\u4E0B\u4EC0\u4E48\u662F\u54CD\u5E94\u5F0F\u3002\u4E00\u4E2A\u6700\u7B80\u5355\u7684\u4F8B\u5B50\u662F\uFF1A</p><p>\u73B0\u5728\u5B58\u5728\u4E24\u4E2A\u53D8\u91CF <code>a</code>\u548C <code>b</code>\uFF0C\u7136\u540E\u8FD8\u6709\u4E00\u4E2A\u53D8\u91CF\u6765\u8868\u793A\u4ED6\u4EEC\u7684\u548C <code>sum</code>\u3002\u5F53 <code>a</code> \u6216\u8005 <code>b</code> \u7684\u503C\u53D8\u5316\u65F6\uFF0C<code>sum</code> \u7684\u503C\u4E5F\u4F1A\u81EA\u52A8\u53D8\u4E3A a \u548C b \u7684\u548C\u3002</p><p>\u5C06\u4E0A\u9762\u7684\u63CF\u8FF0\u7FFB\u8BD1\u6210\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> a <span class="token operator">+</span> b

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span> <span class="token comment">// =&gt; 2</span>

b <span class="token operator">=</span> <span class="token number">2</span>
consolel<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span> <span class="token comment">// =&gt; 2\uFF0C\u8FD9\u91CC\u6211\u4EEC\u5E0C\u671B sum \u7684\u503C\u5E94\u8BE5\u662F 3\uFF0C\u4F46\u662F sum \u7684\u503C\u5E76\u6CA1\u6709\u81EA\u52A8\u53D8\u66F4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u600E\u4E48\u6837\u624D\u80FD\u5B9E\u73B0 sum \u7684\u503C\u81EA\u52A8\u53D8\u6210 a \u548C b \u4E24\u8005\u4E4B\u548C\u5462\uFF1F</p><p>\u5C31\u662F\u5728\u6211\u4EEC\u7ED9 b \u8D4B\u503C\u7684\u65F6\u5019\uFF0C\u518D\u53BB\u8BA1\u7B97\u4E0B a + b \u7684\u503C\uFF0C\u7136\u540E\u8D4B\u503C\u7ED9 sum \u8FD9\u4E2A\u53D8\u91CF\u3002\u91CD\u65B0\u8BA1\u7B97 a + b \u7684\u503C\uFF0C\u8FD9\u4E2A\u52A8\u4F5C\u5B9E\u9645\u4E0A\u53EF\u4EE5\u62BD\u8C61\u4E3A\u4E00\u4E2A\u51FD\u6570\u3002\u90A3\u4E48\u6211\u4EEC\u5F88\u5BB9\u6613\u5199\u51FA\u4E0B\u9762\u7684\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> sum

<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  sum <span class="token operator">=</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span> <span class="token comment">// =&gt; 2</span>

b <span class="token operator">=</span> <span class="token number">2</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

consolel<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span> <span class="token comment">// =&gt; 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53 b \u7684\u503C\u6539\u53D8\u7684\u65F6\u5019\uFF0C\u53EA\u9700\u8981\u91CD\u65B0\u8FD0\u884C\u4E0B fn \u8FD9\u4E2A\u51FD\u6570\uFF0C\u5C31\u53EF\u4EE5\u4FDD\u8BC1 sum \u7684\u503C\u662F\u6B63\u786E\u7684\u4E86\u3002</p><p>\u8981\u60F3\u81EA\u52A8\u91CD\u65B0\u8FD0\u884C fn \u8FD9\u4E2A\u51FD\u6570\uFF0C\u9996\u5148\u6211\u4EEC\u8981\u5728\u51FD\u6570 fn \u548C\u53D8\u91CF a b \u4E4B\u95F4\u5EFA\u7ACB\u4E00\u4E2A\u4F9D\u8D56\u5173\u7CFB\u3002</p><p>\u8FD9\u6837\u5F53 b \u6539\u53D8\u65F6\uFF0C\u6211\u4EEC\u5C31\u77E5\u9053\u9700\u8981\u91CD\u65B0\u6267\u884C\u51FD\u6570 fn \u4E86\u3002</p><p>\u603B\u7ED3\u4E0B\uFF0C\u5B9E\u73B0\u54CD\u5E94\u5F0F\u9700\u8981\u505A\u5230\u4E00\u4E0B\u51E0\u70B9\uFF1A</p><ol><li>\u5F53\u4E00\u4E2A\u503C\u88AB\u8BFB\u53D6\u65F6\u8FDB\u884C\u8FFD\u8E2A\uFF0C\u6BD4\u5982 fn \u51FD\u6570\u4E2D\u8BFB\u53D6\u4E86 a \u548C b \u4E24\u4E2A\u53D8\u91CF</li><li>\u5F53\u67D0\u4E2A\u503C\u6539\u53D8\u65F6\u8FDB\u884C\u68C0\u6D4B\uFF0C\u6BD4\u5982\u4FEE\u6539 b \u7684\u503C\u4E3A 2</li><li>\u91CD\u65B0\u8FD0\u884C\u4EE3\u7801\u6765\u8BFB\u53D6\u539F\u59CB\u503C\uFF0C\u6BD4\u5982\u91CD\u65B0\u8FD0\u884C fn \u51FD\u6570</li></ol><h2 id="\u54CD\u5E94\u5F0F\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u5F0F\u539F\u7406" aria-hidden="true">#</a> \u54CD\u5E94\u5F0F\u539F\u7406</h2><p>\u60F3\u8981\u505A\u5230\u4E0A\u9762\u7684\u4E09\u70B9\uFF0C\u6211\u4EEC\u9700\u8981\u5177\u5907\u4E0B\u9762\u4E24\u4E2A\u80FD\u529B\uFF1A</p><ol><li>\u9700\u8981\u77E5\u9053\u53D8\u91CF\u4EC0\u4E48\u65F6\u5019\u88AB\u8D4B\u503C\uFF0C\u4EC0\u4E48\u65F6\u5019\u88AB\u8BFB\u53D6\uFF1F</li><li>\u77E5\u9053\u9700\u8981\u5F53\u524D\u6B63\u5728\u8FD0\u884C\u7684\u662F\u54EA\u4E2A\u51FD\u6570\uFF1F</li></ol>`,19),k=n("\u5BF9\u4E8E\u7B2C\u4E00\u70B9\uFF0CEs6 \u63D0\u4F9B\u4E86\u65B0\u7684\u8BED\u6CD5 "),d={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy",target:"_blank",rel:"noopener noreferrer"},v=n("Proxy"),m=n("\u3002Proxy \u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5B83\u5305\u88C5\u4E86\u53E6\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u5141\u8BB8\u4F60\u62E6\u622A\u5BF9\u8BE5\u5BF9\u8C61\u7684\u4EFB\u4F55\u4EA4\u4E92\u3002"),b=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>handler \u4E2D\u7684 get \u548C set \u5C5E\u6027\u53EF\u4EE5\u68C0\u6D4B\u5230\u5BF9\u8BE5\u5BF9\u8C61\u5C5E\u6027\u7684\u8BFB\u53D6\u548C\u8D4B\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">)</span> <span class="token comment">// \u8FD9\u91CC\u8FDB\u884C\u6536\u96C6</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">)</span> <span class="token comment">// \u8FD9\u91CC\u89E6\u53D1\u76F8\u5173\u51FD\u6570\u91CD\u65B0\u6267\u884C</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>proxy<span class="token punctuation">.</span>foo<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u65F6 Proxy \u4E00\u822C\u548C Reflect \u4E00\u8D77\u4F7F\u7528\u5C06\u5BF9\u4EE3\u7406\u5BF9\u8C61\u7684\u64CD\u4F5C\u53CD\u5C04\u56DE\u6E90\u5BF9\u8C61\uFF0C\u4E3B\u8981\u662F\u4E3A\u4E86\u65B9\u4FBF\u5904\u7406\u6E90\u5BF9\u8C61\u4E0A getter \u548C setter \u7684 this \u6307\u5411\u95EE\u9898\u3002</p><p>Proxy \u5F88\u5F3A\u5927\uFF0C\u4F46\u662F\u5B83\u53EA\u80FD\u4EE3\u7406\u5BF9\u8C61\uFF0C\u90A3\u4E48\u5BF9\u4E8E\u57FA\u7840\u7C7B\u578B\u600E\u4E48\u76D1\u542C\u5B83\u7684\u8BFB\u53D6\u548C\u53D8\u5316\u5462\uFF1F</p><p>Vue3 \u901A\u8FC7 RefImpl \u8FD9\u4E2A\u7C7B\u5305\u88F9\u539F\u59CB\u503C\uFF0C\u901A\u8FC7\u5B9E\u4F8B\u7684 get \u548C set \u65B9\u6CD5\u52AB\u6301\u5BF9\u4E8E\u539F\u59CB\u6570\u636E\u7684\u66F4\u6539\u3002\u6240\u4EE5\u672C\u8D28\u4E0A\u8FD8\u662F\u901A\u8FC7 Object.defineProperty \u6765\u5B9E\u73B0\u54CD\u5E94\u5F0F\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">RefImpl<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> _value<span class="token operator">:</span> <span class="token constant">T</span>
  <span class="token comment">/* ... */</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token keyword">public</span> <span class="token keyword">readonly</span> _shallow<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* ... */</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> _shallow <span class="token operator">?</span> value <span class="token operator">:</span> <span class="token function">toReactive</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">trackRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// \u5728\u8FD9\u91CC\u8FDB\u884C\u6536\u96C6</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_value
  <span class="token punctuation">}</span>
  <span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* ... */</span>
    <span class="token function">triggerRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newVal<span class="token punctuation">)</span> <span class="token comment">// \u8FD9\u91CC\u8C03\u7528\u76F8\u5173\u51FD\u6570\u91CD\u65B0\u6267\u884C</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u7B2C\u4E8C\u70B9\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u9AD8\u9636\u51FD\u6570\u7684\u6982\u5FF5\uFF0C\u5305\u88F9\u6307\u5B9A\u7684\u51FD\u6570\uFF0C\u518D\u7528\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\u4FDD\u5B58\u8BE5\u51FD\u6570\u3002\u7C7B\u578B\u4E0E\u4E0B\u9762\u7684\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> activeFunction<span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">effect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      activeFunction <span class="token operator">=</span> fn<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      activeFunction <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> effectFoo <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u91CC\u7684 activeFunction \u5C31\u662F foo</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> effectBar <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">bar</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u91CC\u7684 activeFunction \u5C31\u662F bar</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u6211\u4EEC\u6709\u4E86\u8FD9\u4E24\u4E2A\u80FD\u529B\u5C31\u53EF\u4EE5\u5B9E\u73B0\u54CD\u5E94\u5F0F\u4E86\uFF0C\u4E0B\u9762\u6211\u4EEC\u6765\u5206\u6790\u6E90\u7801\u3002</p><h2 id="\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> \u6E90\u7801\u5206\u6790</h2><p>\u5728\u5206\u6790\u6E90\u7801\u4E4B\u524D\u6211\u4EEC\u5148\u770B\u4E0B Vue3 \u7684\u54CD\u5E94\u5F0F\u662F\u600E\u4E48\u4F7F\u7528\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> effect <span class="token punctuation">}</span> <span class="token operator">=</span> VueReactivity

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;origin value&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;proxy -&gt; name:&#39;</span><span class="token punctuation">,</span> proxy<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// proxy -&gt; name: origin value</span>

proxy<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;changed value&#39;</span>
<span class="token comment">// proxy -&gt; name: changed value</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E\u54CD\u5E94\u5F0F\u76F8\u5173\u7684\u4EE3\u7801\u653E\u5728 /packages/reactivity \u4E0B\u3002\u4E0B\u9762\u6211\u4EEC\u4E3B\u8981\u5173\u6CE8\u8FD9\u4E2A\u6A21\u5757\u4E0B\u7684\u4EE3\u7801\u3002</p><p>\u70B9\u5F00\u4E4B\u540E\u53EF\u4EE5\u770B\u5230\u6A21\u5757\u7684\u76EE\u5F55\u7ED3\u6784\u5982\u4E0B\u56FE\u6240\u793A\uFF1A</p><p>\u4E3B\u8981\u5173\u6CE8\u70B9\u7684\u6A21\u5757\u662F\uFF1A</p><ul><li>reactive\uFF1A\u662F\u7528\u6765\u4EE3\u7406\u6307\u5B9A\u7684\u5BF9\u8C61\uFF0C\u4F7F\u5176\u53D8\u6210\u54CD\u5E94\u5F0F\u7684\u3002</li><li>baseHandler\uFF1A\u5B9A\u4E49\u5BF9\u8C61\u7684 get \u548C set \u7B49\u65B9\u6CD5\u3002</li><li>effect\uFF1A\u5305\u88F9\u4E00\u4E2A\u51FD\u6570\uFF0C\u5F53\u8BE5\u51FD\u6570\u5185\u90E8\u4F7F\u7528\u7684\u54CD\u5E94\u5F0F\u6570\u636E\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u6539\u51FD\u6570\u4F1A\u81EA\u52A8\u91CD\u65B0\u8FD0\u884C\u3002</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>reactivity
\u251C\u2500\u2500 api-extractor.json          # \u6A21\u5757 api \u7684\u63CF\u8FF0
\u251C\u2500\u2500 index.js                    # commonjs \u4E0B\u5BFC\u51FA\u6A21\u5757\uFF0C\u5E76\u4E14\u5BFC\u51FA\u7684\u662F\u7F16\u8BD1\u597D\u7684\u6A21\u5757
\u251C\u2500\u2500 LICENSE
\u251C\u2500\u2500 package.json
\u251C\u2500\u2500 README.md
\u251C\u2500\u2500 src
\u2502   \u251C\u2500\u2500 baseHandlers.ts         # \u4E00\u822C\u6570\u636E\u7C7B\u578B\u7684\u5904\u7406\u5668
\u2502   \u251C\u2500\u2500 collectionHandlers.ts   # \u96C6\u5408\u7C7B\u578B\u6570\u636E\u7684\u5904\u7406\u5668
\u2502   \u251C\u2500\u2500 computed.ts             # \u8BA1\u7B97\u5C5E\u6027\u76F8\u5173
\u2502   \u251C\u2500\u2500 deferredComputed.ts
\u2502   \u251C\u2500\u2500 dep.ts                  # \u4F9D\u8D56\u7BA1\u7406
\u2502   \u251C\u2500\u2500 effect.ts               # \u526F\u4F5C\u7528\u51FD\u6570
\u2502   \u251C\u2500\u2500 effectScope.ts
\u2502   \u251C\u2500\u2500 index.ts                # \u6A21\u5757\u5165\u53E3\uFF0C\u5BFC\u51FA\u65B9\u6CD5
\u2502   \u251C\u2500\u2500 operations.ts           # \u64CD\u4F5C\u7C7B\u578B\u7684\u9759\u6001\u914D\u7F6E
\u2502   \u251C\u2500\u2500 reactive.ts             # \u5BF9\u8C61\u7684\u54CD\u5E94\u5F0F\u76F8\u5173
\u2502   \u251C\u2500\u2500 ref.ts                  # \u57FA\u7840\u7C7B\u578B\u7684\u76F8\u5E94\u5F0F
\u2502   \u2514\u2500\u2500 warning.ts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u54CD\u5E94\u5F0F\u76F8\u5173\u7684\u903B\u8F91\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u56FE\u63CF\u8FF0\uFF1A</p><p><img src="`+i+`" alt=""></p><p>\u5148\u5206\u6790\u4E0B\u54CD\u5E94\u5F0F\u6570\u636E\u548C\u5BF9\u5E94\u7684\u526F\u4F5C\u7528\u51FD\u6570\u4E4B\u95F4\u7684\u5173\u7CFB\u662F\u600E\u4E48\u5B58\u50A8\u7684\u3002</p><p>\u5728 effect \u6A21\u5757\u7684\u5168\u5C40\u4F5C\u7528\u57DF\u4E0B\u4F1A\u6709\u4E00\u4E2A targetMap \u8FD9\u4E2A\u5BF9\u8C61\uFF0C\u5B83\u662F\u4E00\u4E2A WeakMap\uFF0C\u952E\u662F\u76EE\u6807\u5BF9\u8C61\uFF0C\u503C\u662F\u4E00\u4E2A desMap\u3002</p><p>depsMap \u662F\u4E00\u4E2A Map\uFF0C\u5B83\u7684\u952E\u662F\u76EE\u6807\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\uFF0C\u503C\u662F\u4E00\u4E2A\u4F9D\u8D56\u96C6\u5408(Set)\u3002</p><p>\u5F53\u67D0\u4E2A\u526F\u4F5C\u7528\u51FD\u6570\u8BFB\u53D6\u4E86\u54CD\u5E94\u5F0F\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u8FD9\u4E2A\u526F\u4F5C\u7528\u51FD\u6570\u5C31\u4F1A\u88AB\u653E\u7F6E\u5728\u5BF9\u5E94\u7684\u4F9D\u8D56\u96C6\u5408\u4E2D\u3002</p><h3 id="\u6A21\u5757\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5757\u6982\u8FF0" aria-hidden="true">#</a> \u6A21\u5757\u6982\u8FF0</h3><p><strong>reactive</strong></p><p>\u8FD9\u4E2A\u6A21\u5757\u66B4\u9732\u4E86 reactive shallowReactive readonly shallowReadonly \u56DB\u4E2A\u54CD\u5E94\u5F0F\u76F8\u5173\u7684\u65B9\u6CD5\uFF0C\u7136\u540E\u8FD9\u56DB\u4E2A\u65B9\u6CD5\u90FD\u4F1A\u8C03\u7528 createReactiveObject \u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u7136\u540E\u7531\u5185\u90E8\u53BB\u8C03\u7528 new Proxy() \u5E76\u5224\u65AD\u4F7F\u7528\u54EA\u79CD\u5904\u7406\u51FD\u6570\u3002</p><p>\u8FD8\u6709\u4E00\u70B9\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0Creactive \u6A21\u5757\u6709\u4E2A\u5168\u5C40\u7F13\u5B58\uFF0C\u5F53\u5BF9\u8C61\u88AB\u4EE3\u7406\u8FC7\u4E4B\u540E\uFF0C\u5C31\u76F4\u63A5\u8FD4\u56DE\u7F13\u5B58\u4E2D\u7684\u5BF9\u8C61\uFF0C\u907F\u514D\u5BF9\u4E00\u4E2A\u5BF9\u8C61\u91CD\u590D\u4EE3\u7406\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">reactive</span><span class="token punctuation">(</span>target<span class="token operator">:</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// if trying to observe a readonly proxy, return the readonly version.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>target <span class="token keyword">as</span> Target<span class="token punctuation">)</span><span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">createReactiveObject</span><span class="token punctuation">(</span>
    target<span class="token punctuation">,</span>
    <span class="token boolean">false</span><span class="token punctuation">,</span>
    mutableHandlers<span class="token punctuation">,</span>
    mutableCollectionHandlers<span class="token punctuation">,</span>
    reactiveMap
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createReactiveObject</span><span class="token punctuation">(</span>
  target<span class="token operator">:</span> Target<span class="token punctuation">,</span>
  isReadonly<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  baseHandlers<span class="token operator">:</span> ProxyHandler<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  collectionHandlers<span class="token operator">:</span> ProxyHandler<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  proxyMap<span class="token operator">:</span> WeakMap<span class="token operator">&lt;</span>Target<span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">value cannot be made reactive: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">String</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u5BF9\u8C61\u5DF2\u7ECF\u88AB\u4EE3\u7406\u4E86\uFF0C\u5C31\u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    target<span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">RAW</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span><span class="token punctuation">(</span>isReadonly <span class="token operator">&amp;&amp;</span> target<span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_REACTIVE</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u5BF9\u8C61\u5728\u7F13\u5B58\u4E2D\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">const</span> existingProxy <span class="token operator">=</span> proxyMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>existingProxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> existingProxy
  <span class="token punctuation">}</span>
  <span class="token comment">// \u53EA\u6709\u53EF\u4EE5\u88AB\u4EE3\u7406\u7684\u5BF9\u8C61\u624D\u4F1A\u88AB\u4EE3\u7406 Object Array Map Set WeakMap WeakSet</span>
  <span class="token keyword">const</span> targetType <span class="token operator">=</span> <span class="token function">getTargetType</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>targetType <span class="token operator">===</span> TargetType<span class="token punctuation">.</span><span class="token constant">INVALID</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
    target<span class="token punctuation">,</span>
    targetType <span class="token operator">===</span> TargetType<span class="token punctuation">.</span><span class="token constant">COLLECTION</span> <span class="token operator">?</span> collectionHandlers <span class="token operator">:</span> baseHandlers
  <span class="token punctuation">)</span>
  proxyMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span>
  <span class="token keyword">return</span> proxy
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>handler</strong></p><p>\u4EE5 baseHandler \u4E3A\u4F8B\uFF0Chandler \u8FD9\u4E2A\u6A21\u5757\u4E3B\u8981\u7684\u529F\u80FD\u662F\uFF1A\u5B9E\u73B0\u5C5E\u6027\u7684get\uFF0Cset\u7B49\u65B9\u6CD5\uFF0C\u5E76\u4E14\u5728\u6070\u5F53\u65F6\u673A\u8C03\u7528\u6536\u96C6(track)\u548C\u89E6\u53D1(trigger)\u65B9\u6CD5\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u8FD4\u56DE\u4E86 Getter \u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">createGetter</span><span class="token punctuation">(</span>isReadonly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> shallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token operator">:</span> Target<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span> receiver<span class="token operator">:</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* ... */</span>

    <span class="token keyword">const</span> targetIsArray <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>

    <span class="token comment">// \u52AB\u6301\u4E86\u6570\u7EC4\u7684\u4E00\u4E9B\u65B9\u6CD5 includes indexOf lastIndexOf push pop shift unshift splice</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isReadonly <span class="token operator">&amp;&amp;</span> targetIsArray <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSymbol</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">?</span> builtInSymbols<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">isNonTrackableKeys</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isReadonly<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u53EA\u8BFB\u7684\u4EE3\u7406\u5BF9\u8C61\u4E0D\u4F1A\u6536\u96C6\u76F8\u5173\u7684\u4F9D\u8D56</span>
      <span class="token comment">// \u6700\u4E3B\u8981\u7684\u903B\u8F91\u5728\u8FD9\u91CC</span>
      <span class="token comment">// \u8FD9\u91CC\u4F1A\u5C06\u5F53\u524D\u5BF9\u8C61\u548C\u4F7F\u7528\u8FD9\u4E2A\u5BF9\u8C61\u7684 effect \u51FD\u6570\uFF08\u5982\u679C\u6709\u7684\u8BDD\uFF09\u5EFA\u7ACB\u4E00\u5C42\u8054\u7CFB\uFF0C\u5E76\u4FDD\u5B58\u5230\u5168\u5C40\u53D8\u91CF targetMap \u4E2D</span>
      <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> TrackOpTypes<span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>shallow<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6D45\u4EE3\u7406\u6A21\u5F0F\u4E0B\u4E0D\u4F1A\u9012\u5F52\u4EE3\u7406\u5185\u90E8\u7684\u5BF9\u8C61</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>

    <span class="token comment">/* ... */</span>

    <span class="token comment">// \u54CD\u5E94\u5F0F\u5BF9\u8C61\u7684\u5B50\u5BF9\u8C61\u4E5F\u4F1A\u662F\u54CD\u5E94\u5F0F\u7684</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> isReadonly <span class="token operator">?</span> <span class="token keyword">readonly</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reactive</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createSetter</span><span class="token punctuation">(</span>shallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">set</span><span class="token punctuation">(</span>
    target<span class="token operator">:</span> object<span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span>
    value<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
    receiver<span class="token operator">:</span> object
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> oldValue <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token comment">/* ... */</span>

    <span class="token keyword">const</span> hadKey <span class="token operator">=</span>
      <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isIntegerKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
        <span class="token operator">?</span> <span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&lt;</span> target<span class="token punctuation">.</span>length
        <span class="token operator">:</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token comment">// \u53CD\u5C04\u4FEE\u6539</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token comment">// don&#39;t trigger if target is something up in the prototype chain of original</span>
    <span class="token comment">// \u53EA\u6709\u4FEE\u6539\u5230\u5F53\u524D\u5BF9\u8C61\u4E0A\u7684\u5C5E\u6027\u624D\u9700\u8981\u89E6\u53D1\u66F4\u65B0\uFF0C\u4FEE\u6539\u539F\u578B\u94FE\u4E0A\u7684\u4E0D\u9700\u8981</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5F53\u524D\u5BF9\u8C61\u4E0D\u5B58\u5728\u7684\u8BE5 key \u503C\u65F6\uFF0C\u6807\u8BB0\u4E3A\u6DFB\u52A0\u6A21\u5F0F</span>
        <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">ADD</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasChanged</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u53EA\u6709\u503C\u53D8\u5316\u4E86\u624D\u89E6\u53D1\u66F4\u65B0</span>
        <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> TriggerOpTypes<span class="token punctuation">.</span><span class="token constant">SET</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>effect</strong></p><p>effect \u5185\u90E8\u521B\u5EFA\u4E86\u4E00\u4E2A ReactiveEffect \u5B9E\u4F8B\uFF0C\u5E76\u9ED8\u8BA4\u8C03\u7528\u5B9E\u4F8B\u7684 run \u65B9\u6CD5\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">effect</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> ReactiveEffectOptions
<span class="token punctuation">)</span><span class="token operator">:</span> ReactiveEffectRunner <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A reactive effect \u5B9E\u4F8B</span>
  <span class="token keyword">const</span> _effect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReactiveEffect</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
  <span class="token comment">// \u521B\u5EFA effect \u65F6\u53EA\u8981\u4E0D\u662F lazy \u6A21\u5F0F\uFF0C\u5C31\u4F1A\u7ACB\u5373\u6267\u884C effect \u5305\u88F9\u7684\u51FD\u6570</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options <span class="token operator">||</span> <span class="token operator">!</span>options<span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    _effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5411\u5916\u629B\u51FA\u4E00\u4E2A runner \u51FD\u6570</span>
  <span class="token comment">// \u8C03\u7528 runner \u51FD\u6570\u7B49\u4E8E\u8C03\u7528\u5185\u90E8 effect \u5B9E\u4F8B\u7684 run \u65B9\u6CD5</span>
  <span class="token keyword">const</span> runner <span class="token operator">=</span> _effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>_effect<span class="token punctuation">)</span> <span class="token keyword">as</span> ReactiveEffectRunner
  runner<span class="token punctuation">.</span>effect <span class="token operator">=</span> _effect
  <span class="token keyword">return</span> runner
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>run \u65B9\u6CD5\u5185\u90E8\u4F1A\u5C06 activeEffect \u8FD9\u4E2A\u5168\u5C40\u53D8\u91CF\u8D4B\u503C\u4E3A\u4F20\u5165\u7684\u51FD\u6570\uFF0C\u7136\u540E\u518D\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570\u3002</p><p>\u8C03\u7528\u539F\u59CB\u51FD\u6570\u65F6\uFF0C\u539F\u59CB\u51FD\u6570\u4E2D\u5982\u679C\u8BFB\u53D6\u4E86\u54CD\u5E94\u5F0F\u7684\u6570\u636E\uFF0C\u5C31\u4F1A\u89E6\u53D1 track \u65B9\u6CD5\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ReactiveEffect<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      activeEffect <span class="token operator">=</span> <span class="token keyword">this</span>
      <span class="token comment">// ...</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
      activeEffect <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>track</strong></p><p>tack \u65B9\u6CD5\u4E3B\u8981\u7684\u4F5C\u7528\u5C31\u662F\u628A activeEffect \u653E\u5230\u5BF9\u5E94\u7684 Deps \u5F53\u4E2D\u3002\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u628A activeEffect \u653E\u5230 Deps \u5F53\u4E2D\u4E4B\u540E\uFF0Ceffect \u4F1A\u6709\u4E2A\u5C5E\u6027 deps \u540C\u6837\u6307\u5411\u5BF9\u5E94\u7684 Deps\u3002\u8FD9\u4E48\u505A\u662F\u56E0\u4E3A\u6BCF\u6B21\u6536\u96C6\u524D\u90FD\u9700\u8981\u5C06 activeEffect \u4ECE\u6574\u4E2A\u4F9D\u8D56\u5173\u7CFB\u4E2D\u5220\u9664\uFF0C\u4EE5\u4FDD\u8BC1\u65B0\u6536\u96C6\u5230\u7684\u4F9D\u8D56\u5173\u7CFB\u662F\u51C6\u786E\u7684\u3002\u5982\u679C\u5168\u91CF\u67E5\u627E\u7684\u6548\u7387\u592A\u4F4E\uFF0C\u6700\u597D\u662F\u6784\u5EFA\u4E00\u4E2A\u53CC\u5411\u6307\u9488\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token operator">:</span> object<span class="token punctuation">,</span> type<span class="token operator">:</span> TrackOpTypes<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldTrack <span class="token operator">&amp;&amp;</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> depsMap <span class="token operator">=</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      targetMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token punctuation">(</span>depsMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> dep <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      depsMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token punctuation">(</span>dep <span class="token operator">=</span> <span class="token function">createDep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> eventInfo <span class="token operator">=</span> __DEV__
      <span class="token operator">?</span> <span class="token punctuation">{</span> effect<span class="token operator">:</span> activeEffect<span class="token punctuation">,</span> target<span class="token punctuation">,</span> type<span class="token punctuation">,</span> key <span class="token punctuation">}</span>
      <span class="token operator">:</span> <span class="token keyword">undefined</span>

    <span class="token function">trackEffects</span><span class="token punctuation">(</span>dep<span class="token punctuation">,</span> eventInfo<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">trackEffects</span><span class="token punctuation">(</span>
  dep<span class="token operator">:</span> Dep<span class="token punctuation">,</span>
  debuggerEventExtraInfo<span class="token operator">?</span><span class="token operator">:</span> DebuggerEventExtraInfo
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> shouldTrack <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>effectTrackDepth <span class="token operator">&lt;=</span> maxMarkerBits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">newTracked</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5982\u679C\u5F53\u524D\u7684 effect \u8FD8\u6CA1\u6709\u88AB\u6253\u8FC7\u6807\u8BB0</span>
      <span class="token comment">// \u5728\u8FD9\u91CC\u7ED9\u8FD9\u4E2A Dep \u6253\u4E0A\u4E00\u4E2A\u6807\u8BB0</span>
      dep<span class="token punctuation">.</span>n <span class="token operator">|=</span> trackOpBit <span class="token comment">// set newly tracked</span>
      shouldTrack <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">wasTracked</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token comment">// \u4E4B\u524D\u6CA1\u6709\u6807\u8BB0\u8FC7\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u91CD\u65B0\u6536\u96C6\u4E0B</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// Full cleanup mode.</span>
    shouldTrack <span class="token operator">=</span> <span class="token operator">!</span>dep<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>activeEffect<span class="token operator">!</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldTrack<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dep<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>activeEffect<span class="token operator">!</span><span class="token punctuation">)</span>
    <span class="token comment">// \u4E3A\u4EC0\u4E48\u8981\u5C06\u5F53\u524D\u7684 dep \u4FDD\u5B58\u5230 activeEffect \u7684 deps \u4E2D\uFF1F</span>
    <span class="token comment">// \u8FD9\u91CC\u5176\u5B9E\u662F\u505A\u4E86\u4E00\u4E2A\u53CC\u5411\u6307\u9488\uFF0C\u901A\u8FC7\u5C5E\u6027\u53EF\u4EE5\u627E\u5230\u76F8\u5173 effects \u7684\u96C6\u5408\uFF0C\u901A\u8FC7\u67D0\u4E2A effect \u53EF\u4EE5\u627E\u5230\u5B83\u5C5E\u4E8E\u54EA\u4E9B Dep \u96C6\u5408</span>
    <span class="token comment">// \u5728 effect \u6BCF\u6B21\u8FD0\u884C\u524D\u90FD\u9700\u8981\u4ECE\u6574\u4E2A\u4F9D\u8D56\u5173\u7CFB\u6811\u4E2D\u5220\u9664\u6389\u5F53\u524D effect\uFF0C\u5F53 effect \u91CD\u65B0\u6267\u884C\u540E\u53C8\u4F1A\u5C06\u5F53\u524D\u7684 effect \u91CD\u65B0\u585E\u5230\u5BF9\u4E8E\u7684 Dep \u91CC</span>
    <span class="token comment">// \u4E3A\u4E86\u65B9\u4FBF\u5904\u7406\uFF0C\u6700\u597D\u662F\u77E5\u9053\u6709\u54EA\u4E9B Dep \u4F7F\u7528\u5230\u4E86\u5F53\u524D\u7684 effect\uFF0C\u6240\u4EE5\u9700\u8981\u5728 effect \u5F53\u4E2D\u8BBE\u7F6E\u53D8\u91CF deps\uFF0C\u7528\u6765\u8868\u793A\u6709\u54EA\u4E9B Dep \u5305\u542B\u5F53\u524D effect</span>
    activeEffect<span class="token operator">!</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> activeEffect<span class="token operator">!</span><span class="token punctuation">.</span>onTrack<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      activeEffect<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">onTrack</span><span class="token punctuation">(</span>
        Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>
          <span class="token punctuation">{</span>
            effect<span class="token operator">:</span> activeEffect<span class="token operator">!</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          debuggerEventExtraInfo
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>trigger</strong></p><p>trigger \u4E3B\u8981\u505A\u7684\u662F\u4ECE\u4F9D\u8D56\u5173\u7CFB\u6811\u4E2D\u62FF\u5230\u8981\u6267\u884C\u7684\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u5E76\u5FAA\u73AF\u8C03\u7528\u4ED6\u4EEC\u7684 run \u65B9\u6CD5\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span>
  target<span class="token operator">:</span> object<span class="token punctuation">,</span>
  type<span class="token operator">:</span> TriggerOpTypes<span class="token punctuation">,</span>
  key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  newValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  oldValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  oldTarget<span class="token operator">?</span><span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span> <span class="token operator">|</span> Set<span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> depsMap <span class="token operator">=</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// never been tracked</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> deps<span class="token operator">:</span> <span class="token punctuation">(</span>Dep <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">!==</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4ECE\u4F9D\u8D56\u5173\u7CFB\u6811\u4E2D\u62FF\u5230\u5BF9\u5E94\u7684 Deps</span>
    deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> effects<span class="token operator">:</span> ReactiveEffect<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5F97\u5230\u8981\u6267\u884C\u7684\u526F\u4F5C\u7528\u51FD\u6570</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> dep <span class="token keyword">of</span> deps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      effects<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>dep<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">triggerEffects</span><span class="token punctuation">(</span><span class="token function">createDep</span><span class="token punctuation">(</span>effects<span class="token punctuation">)</span><span class="token punctuation">,</span> eventInfo<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">triggerEffects</span><span class="token punctuation">(</span><span class="token function">createDep</span><span class="token punctuation">(</span>effects<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">triggerEffects</span><span class="token punctuation">(</span>
  dep<span class="token operator">:</span> Dep <span class="token operator">|</span> ReactiveEffect<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  debuggerEventExtraInfo<span class="token operator">?</span><span class="token operator">:</span> DebuggerEventExtraInfo
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> effect <span class="token keyword">of</span> <span class="token function">isArray</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token operator">?</span> dep <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>dep<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>effect <span class="token operator">!==</span> activeEffect <span class="token operator">||</span> effect<span class="token punctuation">.</span>allowRecurse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effect<span class="token punctuation">.</span>scheduler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effect<span class="token punctuation">.</span><span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E00\u4E9B\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E9B\u4F18\u5316" aria-hidden="true">#</a> \u4E00\u4E9B\u4F18\u5316</h3><p>\u6BCF\u5F53effect\u518D\u6B21\u6267\u884C\u7684\u65F6\u5019\uFF0C\u90FD\u8981\u5148\u5C06\u4E0A\u4E00\u6B21\u6536\u96C6\u8FC7\u7684\u6E05\u7A7A\u6389\uFF0C\u91CD\u65B0\u8FDB\u884C\u6536\u96C6\uFF0C\u8FD9\u4E48\u505A\u7684\u76EE\u7684\u5176\u5B9E\u662F\u4E3A\u4E86\u907F\u514D\u4E0A\u4E00\u6B21\u6536\u96C6\u5230\u7684\u4F9D\u8D56\uFF0C\u672C\u6B21\u4E0D\u9700\u8981\u53BB\u6536\u96C6\u7684\u60C5\u51B5\u6240\u5BFC\u81F4\u7684\u4F9D\u8D56\u6536\u96C6\u9519\u8BEF</p><p>\u4F46\u662F\u5927\u90E8\u5206\u573A\u666F\u4E2D\u4F9D\u8D56\u7684\u53D8\u52A8\u5176\u5B9E\u662F\u76F8\u5BF9\u8F83\u5C0F\u7684\uFF0C\u5E76\u4E0D\u9700\u8981\u5982\u6B64\u5927\u5200\u9614\u65A7\u7684\u8FDB\u884C\u5168\u90E8\u6E05\u7A7A\uFF0C\u518D\u6B21\u6536\u96C6\u3002</p><p>Vue3 \u8FD9\u91CC\u4F7F\u7528\u4E86\u4F4D\u63A9\u7801\u6765\u6807\u8BB0\u4F9D\u8D56\u662F\u5426\u9700\u8981\u88AB\u5220\u9664\u3002\u601D\u8DEF\u662F\u5728 fn \u8FD9\u4E2A\u51FD\u6570\u8FD0\u884C\u524D\u7ED9\u6BCF\u4E2A dep \u6253\u4E0A\u4E00\u4E2A\u6807\u8BB0\uFF0C\u8FD0\u884C\u65F6\u505A\u4E00\u70B9\u8BB0\u53F7\uFF0C\u8FD0\u884C\u7ED3\u675F\u540E\u6CA1\u6709\u8BB0\u53F7\u7684\u5C31\u9700\u8981\u88AB\u5220\u9664</p><p>\u7B2C\u4E00\u6B65\uFF1A\u5728 fn \u51FD\u6570\u8FD0\u884C\u524D\uFF0C\u7ED9\u542B\u6709\u5F53\u524D effect \u7684 dep \u6253\u4E0A\u6807\u8BB0\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ReactiveEffect<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> activeEffect
      activeEffect <span class="token operator">=</span> <span class="token keyword">this</span>
      shouldTrack <span class="token operator">=</span> <span class="token boolean">true</span>

      <span class="token comment">// \u6807\u8BB0 effect \u5C42\u7EA7</span>
      trackOpBit <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">++</span>effectTrackDepth

      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectTrackDepth <span class="token operator">&lt;=</span> maxMarkerBits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5728 fn \u51FD\u6570\u8FD0\u884C\u524D\uFF0C\u7ED9\u542B\u6709\u5F53\u524D effect \u7684 dep \u6253\u4E0A\u6807\u8BB0\uFF0C\u7528 w \u53D8\u91CF\u6765\u5B58\u50A8</span>
        <span class="token function">initDepMarkers</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5168\u91CF\u91CD\u7F6E\u4F9D\u8D56</span>
        <span class="token comment">// \u5F53\u8C03\u7528\u4E0B\u9762\u7684 this.fn() \u4E4B\u540E\uFF0C\u4F1A\u89E6\u53D1 getter \u5E76\u5C06\u5F53\u524D\u7684 effect \u91CD\u65B0\u6DFB\u52A0\u5230 fn \u4E2D\u4F7F\u7528\u5230\u7684\u53D8\u91CF\u5BF9\u5E94\u7684 deps \u91CC</span>
        <span class="token function">cleanupEffect</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">initDepMarkers</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> deps <span class="token punctuation">}</span><span class="token operator">:</span> ReactiveEffect<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> deps<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6253\u4E0A\u65B0\u6807\u8BB0</span>
      deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>w <span class="token operator">|=</span> trackOpBit <span class="token comment">// set was tracked</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E8C\u6B65\uFF1A\u5728\u6536\u96C6\u7684\u65F6\u5019\u7ED9\u5F53\u524D Dep \u4E0A\u6253\u4E0A\u65B0\u6807\u8BB0\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">trackEffects</span><span class="token punctuation">(</span>
  dep<span class="token operator">:</span> Dep<span class="token punctuation">,</span>
  debuggerEventExtraInfo<span class="token operator">?</span><span class="token operator">:</span> DebuggerEventExtraInfo
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> shouldTrack <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>effectTrackDepth <span class="token operator">&lt;=</span> maxMarkerBits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">newTracked</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5982\u679C\u5F53\u524D\u7684 effect \u8FD8\u6CA1\u6709\u88AB\u6253\u8FC7\u6807\u8BB0</span>
      <span class="token comment">// \u5728\u8FD9\u91CC\u7ED9\u8FD9\u4E2A Dep \u6253\u4E0A\u4E00\u4E2A\u6807\u8BB0</span>
      dep<span class="token punctuation">.</span>n <span class="token operator">|=</span> trackOpBit <span class="token comment">// set newly tracked</span>
      shouldTrack <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">wasTracked</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token comment">// \u4E4B\u524D\u6CA1\u6709\u6807\u8BB0\u8FC7\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u91CD\u65B0\u6536\u96C6\u4E0B</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// Full cleanup mode.</span>
    shouldTrack <span class="token operator">=</span> <span class="token operator">!</span>dep<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>activeEffect<span class="token operator">!</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E09\u6B65\uFF1Afn \u6267\u884C\u5B8C\u4E4B\u540E\uFF0C\u770B\u4E0B\u5F53\u524D effect \u5BF9\u5E94\u7684 Dep \u4E2D\uFF0C\u6709\u54EA\u4E9B\u662F\u4E4B\u524D\u88AB\u6807\u8BB0\u4E86\uFF0C\u4F46\u662F\u8FD9\u6B21\u6CA1\u6709\u88AB\u6807\u8BB0\uFF0C\u5219\u9700\u8981\u5220\u9664\u4ECE Dep \u4E2D\u5C06\u8BE5 effect \u5220\u9664\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ReactiveEffect<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectTrackDepth <span class="token operator">&lt;=</span> maxMarkerBits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6267\u884C\u5B8C effect\uFF0C\u770B\u4E0B\u9700\u8981\u5220\u9664\u54EA\u4E9B\u4F9D\u8D56\uFF0C\u9700\u8981\u6DFB\u52A0\u54EA\u4E9B\u4F9D\u8D56</span>
        <span class="token function">finalizeDepMarkers</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      trackOpBit <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">--</span>effectTrackDepth

      activeEffect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parent
      shouldTrack <span class="token operator">=</span> lastShouldTrack
      <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">finalizeDepMarkers</span> <span class="token operator">=</span> <span class="token punctuation">(</span>effect<span class="token operator">:</span> ReactiveEffect<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> deps <span class="token punctuation">}</span> <span class="token operator">=</span> effect
  <span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> ptr <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> deps<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dep <span class="token operator">=</span> deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">wasTracked</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">newTracked</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E4B\u524D\u6536\u96C6\u5230\u4E86\uFF0C\u8FD9\u6B21\u6CA1\u6709 \u9700\u8981\u5220\u9664\u6389\u81EA\u5DF1</span>
        dep<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>effect<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        deps<span class="token punctuation">[</span>ptr<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> dep
      <span class="token punctuation">}</span>
      <span class="token comment">// clear bits</span>
      <span class="token comment">// \u91CD\u7F6E\u6807\u8BB0 \u5148\u6309\u4F4D\u53D6\u53CD\uFF0C\u518D\u53D6\u5E76\u96C6</span>
      dep<span class="token punctuation">.</span>w <span class="token operator">&amp;=</span> <span class="token operator">~</span>trackOpBit
      dep<span class="token punctuation">.</span>n <span class="token operator">&amp;=</span> <span class="token operator">~</span>trackOpBit
    <span class="token punctuation">}</span>
    deps<span class="token punctuation">.</span>length <span class="token operator">=</span> ptr
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ref" tabindex="-1"><a class="header-anchor" href="#ref" aria-hidden="true">#</a> ref</h3><p>ref \u7528\u6765\u5904\u7406\u975E\u5BF9\u8C61\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u5B83\u672C\u8D28\u4E0A\u662F\u5229\u7528\u5BF9\u8C61\u7684 get \u548C set \u65B9\u6CD5\uFF0C\u52AB\u6301\u6570\u636E\u7684\u8BFB\u5199\u518D\u8C03\u7528 track \u548C trigger \u65B9\u6CD5\u3002 \u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0Cref \u7684\u4F9D\u8D56\u5173\u7CFB\u662F\u5B58\u653E\u5728\u5B9E\u4F8B\u7684 dep \u5C5E\u6027\u4E0B\u7684\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">ref</span><span class="token punctuation">(</span>value<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createRef</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createRef</span><span class="token punctuation">(</span>rawValue<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> shallow<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> rawValue
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RefImpl</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">,</span> shallow<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">RefImpl<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> _value<span class="token operator">:</span> <span class="token constant">T</span>
  <span class="token keyword">private</span> _rawValue<span class="token operator">:</span> <span class="token constant">T</span>

  <span class="token keyword">public</span> dep<span class="token operator">?</span><span class="token operator">:</span> Dep <span class="token operator">=</span> <span class="token keyword">undefined</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> __v_isRef <span class="token operator">=</span> <span class="token boolean">true</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token keyword">public</span> <span class="token keyword">readonly</span> __v_isShallow<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_rawValue <span class="token operator">=</span> __v_isShallow <span class="token operator">?</span> value <span class="token operator">:</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> __v_isShallow <span class="token operator">?</span> value <span class="token operator">:</span> <span class="token function">toReactive</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">trackRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_value
  <span class="token punctuation">}</span>

  <span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newVal <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__v_isShallow <span class="token operator">?</span> newVal <span class="token operator">:</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasChanged</span><span class="token punctuation">(</span>newVal<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_rawValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_rawValue <span class="token operator">=</span> newVal
      <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__v_isShallow <span class="token operator">?</span> newVal <span class="token operator">:</span> <span class="token function">toReactive</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>
      <span class="token function">triggerRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> computed</h3><p>computed \u5185\u90E8\u5305\u542B\u4E00\u4E2A\u6709\u81EA\u5B9A\u4E49\u8C03\u5EA6\u5668\u7684 effect \u51FD\u6570\uFF0C\u8FD8\u6709\u4E00\u4E2A\u5185\u90E8\u53D8\u91CF _dirty \u6765\u63A7\u5236\u662F\u5426\u9700\u8981\u91CD\u65B0\u8BA1\u7B97\u5F53\u524D\u8BA1\u7B97\u5C5E\u6027\u7684\u503C\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ComputedRefImpl<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> dep<span class="token operator">?</span><span class="token operator">:</span> Dep <span class="token operator">=</span> <span class="token keyword">undefined</span>

  <span class="token keyword">private</span> _value<span class="token operator">!</span><span class="token operator">:</span> <span class="token constant">T</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> effect<span class="token operator">:</span> ReactiveEffect<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>

  <span class="token keyword">public</span> <span class="token keyword">readonly</span> __v_isRef <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> <span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">boolean</span>

  <span class="token keyword">public</span> _dirty <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">public</span> _cacheable<span class="token operator">:</span> <span class="token builtin">boolean</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>
    getter<span class="token operator">:</span> ComputedGetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> _setter<span class="token operator">:</span> ComputedSetter<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    isReadonly<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
    isSSR<span class="token operator">:</span> <span class="token builtin">boolean</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReactiveEffect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token function">triggerRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span>computed <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_cacheable <span class="token operator">=</span> <span class="token operator">!</span>isSSR
    <span class="token keyword">this</span><span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">]</span> <span class="token operator">=</span> isReadonly
  <span class="token punctuation">}</span>

  <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// the computed ref may get wrapped by other proxies e.g. readonly() #3376</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token function">trackRefValue</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>_dirty <span class="token operator">||</span> <span class="token operator">!</span>self<span class="token punctuation">.</span>_cacheable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      self<span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">false</span>
      self<span class="token punctuation">.</span>_value <span class="token operator">=</span> self<span class="token punctuation">.</span>effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span>_value
  <span class="token punctuation">}</span>

  <span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span>newValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_setter</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u6700\u540E\u603B\u7ED3\u4E0B\uFF1AVue3\u7684\u54CD\u5E94\u5F0F\u6838\u5FC3\u662F\u62BD\u8C61\u51FA\u4E86 effect \u51FD\u6570\u8FD9\u4E2A\u6982\u5FF5\uFF0C\u4F7F\u5F97\u54CD\u5E94\u5F0F\u5B9E\u9645\u4E0A\u5C31\u7B49\u4E8E effect \u51FD\u6570\u7684\u91CD\u65B0\u8C03\u7528\u3002 \u4F7F\u7528 Proxy \u4EE3\u7406\u5BF9\u8C61\uFF0C\u4F7F\u7528 class \u7684 get \u548C set \u52AB\u6301\u57FA\u672C\u6570\u636E\u7C7B\u578B\u3002 \u6700\u540E\u7EF4\u62A4 effect \u51FD\u6570\u548C Dep \u4E4B\u95F4\u7684\u5173\u7CFB\u3002</p>`,62);function f(y,w){const p=t("ExternalLinkIcon");return o(),c("div",null,[r,s("p",null,[k,s("a",d,[v,l(p)]),m]),b])}var h=e(u,[["render",f],["__file","vue3-reactivity.html.vue"]]);export{h as default};
