import{_ as n,o as s,c as a,e}from"./app.cbf35e07.js";const t={},p=e(`<h1 id="\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u6B63\u5219\u8868\u8FBE\u5F0F</h1><p>regular expression: RegExp \u7528\u6765\u5904\u7406\u5B57\u7B26\u4E32\u7684\u89C4\u5219</p><ul><li><p>\u53EA\u80FD\u5904\u7406\u5B57\u7B26\u4E32</p></li><li><p>\u4ED6\u662F\u4E00\u4E2A\u89C4\u5219\uFF1A\u53EF\u4EE5\u9A8C\u8BC1\u5B57\u7B26\u4E32\u662F\u5426\u7B26\u5408\u67D0\u4E2A\u89C4\u5219\uFF08test\uFF09\uFF0C\u4E5F\u53EF\u4EE5\u628A\u5B57\u7B26\u4E32\u4E2D\u7B26\u5408\u89C4\u5219\u7684\u5185\u5BB9\u6355\u83B7\u5230(exec/match)</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;good good study, day day up!&#39;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+</span><span class="token regex-delimiter">/</span></span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">// \u9A8C\u8BC1\u5F53\u524D\u5B57\u7B26\u4E32\u65F6\u5019\u7B26\u5408\u5F53\u524D\u89C4\u5219\uFF08\u662F\u5426\u5305\u542B\u6570\u5B57\uFF09 // =&gt; false</span>
str <span class="token operator">=</span> <span class="token string">&#39;1998-01-23&#39;</span>
reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">// =&gt; [&#39;1998&#39;, index: 0, inputs: &#39;1998-01-23&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7F16\u5199\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u7F16\u5199\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u7F16\u5199\u6B63\u5219\u8868\u8FBE\u5F0F</h3><p>\u521B\u5EFA\u65B9\u5F0F\u6709\u4E24\u79CD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B57\u9762\u91CF\u521B\u5EFA\u65B9\u5F0F\uFF08\u4E24\u4E2A\u659C\u6760\u5305\u8D77\u6765\u7684\uFF0C\u90FD\u662F\u7528\u6765\u63CF\u8FF0\u6B63\u5219\u89C4\u5219\u7684\u5143\u5B57\u7B26\uFF09</span>
<span class="token keyword">let</span> reg1 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+</span><span class="token regex-delimiter">/</span></span>

<span class="token comment">// \u6784\u9020\u51FD\u6570\u65B9\u5F0F</span>
<span class="token comment">// \u4E24\u4E2A\u53C2\u6570\uFF1A \u5143\u5B57\u7B26\u5B57\u7B26\u4E32 \u4FEE\u9970\u7B26\u5B57\u7B26\u4E32</span>
<span class="token keyword">let</span> reg2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;\\\\d+&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6B63\u5219\u8868\u8FBE\u5F0F\u6709\u4E24\u90E8\u5206\u7EC4\u6210" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u8868\u8FBE\u5F0F\u6709\u4E24\u90E8\u5206\u7EC4\u6210" aria-hidden="true">#</a> \u6B63\u5219\u8868\u8FBE\u5F0F\u6709\u4E24\u90E8\u5206\u7EC4\u6210</h3><ul><li>\u5143\u5B57\u7B26</li><li>\u4FEE\u9970\u7B26</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* \u5E38\u7528\u7684\u5143\u5B57\u7B26
	1. \u91CF\u8BCD\u5143\u5B57\u7B26\uFF08\u8BBE\u7F6E\u51FA\u73B0\u7684\u6B21\u6570\uFF09
		*		\u96F6\u5230\u591A\u6B21
		+		\u4E00\u5230\u591A\u6B21
		? 		\u96F6\u6B21\u6216\u4E00\u6B21
		{n} 	\u51FA\u73B0n\u6B21
		{n,}	\u51FA\u73B0n\u5230\u591A\u6B21
		{n,m}	\u51FA\u73B0n\u5230m\u6B21
		
    2. \u7279\u6B8A\u5143\u5B57\u7B26\uFF08\u5355\u4E2A\u6216\u7EC4\u5408\u4E00\u8D77\u4EE3\u8868\u7279\u6B8A\u542B\u4E49\uFF09
    	\\		\u8F6C\u4E49\u5B57\u7B26(\u666E\u901A-&gt;\u7279\u6B8A-&gt;\u666E\u901A)
    	.		\u9664\\n(\u6362\u884C\u7B26)\u4EE5\u5916\u7684\u4EFB\u610F\u5B57\u7B26
    	^		\u4EE5\u54EA\u4E00\u4E2A\u5143\u5B57\u7B26\u4F5C\u4E3A\u5F00\u59CB
    	$		\u4EE5\u54EA\u4E00\u4E2A\u5143\u5B57\u7B26\u4F5C\u4E3A\u7ED3\u675F
    	\\n		\u6362\u884C\u7B26
    	\\d		0~9\u4E4B\u95F4\u7684\u6570\u5B57
    	\\D		\u975E0~9\u4E4B\u95F4\u7684\u6570\u5B57\uFF08\u5927\u5199\u548C\u5C0F\u5199\u7684\u610F\u601D\u662F\u76F8\u53CD\u7684\uFF09
    	\\w		\u6570\u5B57\u3001\u5B57\u6BCD\u3001\u4E0B\u5212\u7EBF\u4E2D\u7684\u4EFB\u610F\u4E00\u4E2A\u5B57\u7B26
    	\\s		\u4E00\u4E2A\u7A7A\u767D\u5B57\u7B26(\u5305\u542B\u7A7A\u683C\u3001\u5236\u8868\u7B26\u3001\u6362\u9875\u7B26\u7B49)
    	\\t		\u4E00\u4E2A\u5236\u8868\u7B26(\u4E00\u4E2Atab\u952E:\u56DB\u4E2A\u7A7A\u683C)
    	\\b		\u5339\u914D\u4E00\u4E2A\u5355\u8BCD\u7684\u8FB9\u754C
    	x|y		x\u6216\u8005y\u4E2D\u7684\u4E00\u4E2A\u5B57\u7B26
    	[xyz]	x\u6216\u8005y\u6216\u8005z\u4E2D\u7684\u4E00\u4E2A\u5B57\u7B26
        [^xy]	\u9664\u4E86x/y\u4EE5\u5916\u7684\u4EFB\u610F\u5B57\u7B26
        [a-z]	\u6307\u5B9Aa-z\u8FD9\u4E2A\u8303\u56F4\u4E2D\u7684\u4EFB\u610F\u5B57\u7B26
        [^a-z]	\u9664\u4E86a-z\u8FD9\u4E2A\u8303\u56F4\u5185\u7684\u4EFB\u610F\u5B57\u7B26
        ()		\u6B63\u5219\u4E2D\u7684\u5206\u7EC4\u7B26\u53F7
        (?:)	\u53EA\u5339\u914D\u4E0D\u6355\u83B7
        (?=)	\u6B63\u5411\u9884\u67E5
        (?!)	\u8D1F\u5411\u9884\u67E5
    
    3. \u666E\u901A\u5143\u5B57\u7B26\uFF08\u4EE3\u8868\u672C\u8EAB\u542B\u4E49\uFF09
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*
	\u6B63\u5219\u8868\u8FBE\u5F0F\u4E2D\u7684\u5E38\u7528\u4FEE\u9970\u7B26
        i =&gt; ignorecase		\u5FFD\u7565\u5355\u8BCD\u7684\u5927\u5C0F\u5199
        m =&gt; multiline		\u53EF\u4EE5\u8FDB\u884C\u591A\u884C\u5339\u914D
        g =&gt; global			\u5168\u5C40\u5339\u914D
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5143\u5B57\u7B26\u8BE6\u7EC6\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u5143\u5B57\u7B26\u8BE6\u7EC6\u89E3\u6790" aria-hidden="true">#</a> \u5143\u5B57\u7B26\u8BE6\u7EC6\u89E3\u6790</h3><ul><li><p><code>^ &amp;</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d</span><span class="token regex-delimiter">/</span></span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;2019abc&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abc2019&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; false</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d$</span><span class="token regex-delimiter">/</span></span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;2019abc&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; false</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abc2019&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ^\u548C$ \u90FD\u4E0D\u52A0\u8868\u793A\uFF1A\u5B57\u7B26\u4E32\u4E2D\u5305\u542B\u89C4\u5219\u7684\u5185\u5BB9\u5373\u53EF</span>
<span class="token comment">// ^\u548C$ \u90FD\u52A0\u8868\u793A\uFF1A \u5B57\u7B26\u4E32\u53EA\u80FD\u662F\u548C\u89C4\u5219\u4E00\u76F4\u7684\u5185\u5BB9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>\\</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD9\u91CC\u7684 . \u4EE3\u8868\u7684\u662F\u9664 \\n \u610F\u5916\u7684\u4EFB\u610F\u5B57\u7B26</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^2.3$</span><span class="token regex-delimiter">/</span></span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;2.3&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;2@3&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;23&#39;</span><span class="token punctuation">)</span> 		<span class="token comment">// =&gt; false</span>

<span class="token comment">// \u4F7F\u7528\u8F6C\u4E49\u5B57\u7B26\uFF0C\u8BA9\u5176\u53EA\u80FD\u4EE3\u8868\u5C0F\u6570\u70B9</span>
reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^2\\.3$</span><span class="token regex-delimiter">/</span></span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;2.3&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;2@3&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>

<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;\\\\d&#39;</span>
reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d$</span><span class="token regex-delimiter">/</span></span>		<span class="token comment">// =&gt; \\d \u4EE3\u8868 0-9 \u7684\u6570\u5B57</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>
reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\\\d$</span><span class="token regex-delimiter">/</span></span>		<span class="token comment">// =&gt; \u628A\u7279\u6B8A\u7B26\u53F7\u8F6C\u5316\u6210\u666E\u901A\u7684</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>x|y</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^18|29$</span><span class="token regex-delimiter">/</span></span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;18&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;29&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;129&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;189&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;1829&#39;</span><span class="token punctuation">)</span>	<span class="token comment">// =&gt; true	</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;829&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;182&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
<span class="token comment">// -----\u76F4\u63A5 x|y \u5B58\u5728\u5F88\u4E71\u7684\u4F18\u5148\u7EA7\uFF0C\u4E00\u822C\u6211\u4EEC\u5199\u7684\u65F6\u5019\u90FD\u4F34\u968F\u7740\u5C0F\u62EC\u53F7\u8FDB\u884C\u5206\u7EC4\uFF0C\u56E0\u4E3A\u5C0F\u62EC\u53F7\u6539\u53D8\u5904\u7406\u7684\u4F18\u5148\u7EA7 =&gt; \u5C0F\u62EC\u53F7\uFF1A\u5206\u7EC4</span>
reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(18)|(29)$</span><span class="token regex-delimiter">/</span></span>
<span class="token comment">// =&gt; \u73B0\u5728\u53EA\u80FD\u662F 18 \u6216 29 \u4E2D\u7684\u4E00\u4E2A\u4E86</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;18&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;29&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;129&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;189&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>[]</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u4E2D\u62EC\u53F7\u4E2D\u51FA\u73B0\u7684\u5B57\u7B26\u4E00\u822C\u90FD\u4EE3\u8868\u672C\u8EAB\u7684\u542B\u4E49</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[@+]$</span><span class="token regex-delimiter">/</span></span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;@&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;@@&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;@+&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>

reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\d]$</span><span class="token regex-delimiter">/</span></span>		<span class="token comment">// =&gt; \\d \u5728\u4E2D\u62EC\u53F7\u4E2D\u8FD8\u662F 0-9</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;\\\\&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>

<span class="token comment">// \u4E2D\u62EC\u53F7\u4E2D\u4E0D\u5B58\u5728\u591A\u4F4D\u6570</span>
reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[18]$</span><span class="token regex-delimiter">/</span></span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;18&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>

reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[10-29]$</span><span class="token regex-delimiter">/</span></span>	<span class="token comment">// =&gt; 1 \u6216\u8005 0-2 \u6216\u8005 9</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="\u5E38\u7528\u7684\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u7684\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u5E38\u7528\u7684\u6B63\u5219\u8868\u8FBE\u5F0F</h3><ul><li><p>\u9A8C\u8BC1\u662F\u5426\u4E3A\u6709\u6548\u6570\u5B57</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u53EF\u80FD\u51FA\u73B0 + - \u53F7\uFF0C\u4E5F\u53EF\u80FD\u4E0D\u51FA\u73B0		[+-]?</span>
<span class="token comment">// 2. \u4E00\u4F4D0-9\u90FD\u53EF\u4EE5\uFF0C\u591A\u4F4D\u9996\u4F4D\u4E0D\u80FD\u662F0		(\\d|([1-9]\\d+))</span>
<span class="token comment">// 3. \u5C0F\u6570\u90E8\u5206\u53EF\u80FD\u6709\u53EF\u80FD\u6CA1\u6709\uFF0C\u4E00\u65E6\u6709\u5FC5\u987B\u6709\u5C0F\u6570\u70B9+\u6570\u5B57		(\\.\\d+)?</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[+-]?(\\d|([1-9]\\d+))(\\.\\d+)?$</span><span class="token regex-delimiter">/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u9A8C\u8BC1\u5BC6\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u6570\u5B57\u3001\u5B57\u6BCD\u3001\u4E0B\u5212\u7EBF</span>
<span class="token comment">// 2. 6~16\u4F4D</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\w{6~16}$</span><span class="token regex-delimiter">/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u9A8C\u8BC1\u771F\u5B9E\u59D3\u540D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u9A8C\u8BC1\u6C49\u5B57 /^[\\u4E00-\\u9FA5]$/</span>
<span class="token comment">// 2. \u540D\u5B57\u957F\u5EA6 2~10 \u4F4D</span>
<span class="token comment">// 3. \u53EF\u80FD\u6709\u8BD1\u540D</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\u4E00-\\u9FA5]{2,10}(\xB7[\\u4E00-\\u9FA5]{2,10}){0,2}$</span><span class="token regex-delimiter">/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u9A8C\u8BC1\u90AE\u7BB1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\w+((-\\w+)|(\\.\\w+)*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$</span><span class="token regex-delimiter">/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u9A8C\u8BC1\u8EAB\u4EFD\u8BC1\u53F7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5C0F\u62EC\u53F7\u7684\u7B2C\u4E8C\u4E2A\u4F5C\u7528\uFF1A\u5206\u7EC4\u6355\u83B7</span>
<span class="token comment">// \u4E0D\u4EC5\u53EF\u4EE5\u628A\u6B63\u5219\u5339\u914D\u7684\u4FE1\u606F\u6355\u83B7\u5230\uFF0C\u8FD8\u53EF\u4EE5\u5355\u72EC\u6355\u83B7\u5230\u6BCF\u4E2A\u5C0F\u5206\u7EC4\u7684\u5185\u5BB9</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d)(\\d|X)$</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;41302619980123691X&#39;</span>
reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">// =&gt; [&quot;41302619980123691X&quot;, &quot;413026&quot;, &quot;1998&quot;, &quot;01&quot;, &quot;23&quot;, &quot;69&quot;, &quot;1&quot;, &quot;X&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="\u6B63\u5219\u4E24\u79CD\u521B\u5EFA\u65B9\u5F0F\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u4E24\u79CD\u521B\u5EFA\u65B9\u5F0F\u7684\u533A\u522B" aria-hidden="true">#</a> \u6B63\u5219\u4E24\u79CD\u521B\u5EFA\u65B9\u5F0F\u7684\u533A\u522B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6784\u9020\u51FD\u6570\u56E0\u4E3A\u4F20\u9012\u7684\u662F\u5B57\u7B26\u4E32\uFF0C\\\u9700\u8981\u5199\u4E24\u4E2A\u624D\u8868\u793A\u659C\u6760</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;\\\\d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u6B63\u5219\u8868\u8FBE\u5F0F\u4E2D\u7684\u90E8\u5206\u5185\u5BB9\u662F\u53D8\u91CF\u5B58\u50A8\u7684\u503C</span>
<span class="token comment">// \u4E24\u4E2A\u659C\u6760\u4E2D\u95F4\u5305\u8D77\u6765\u7684\u90FD\u662F\u5143\u5B57\u7B26(\u5982\u679C\u6B63\u5219\u4E2D\u8981\u5305\u542B\u67D0\u4E2A\u53D8\u91CF\u7684\u503C\uFF0C\u5219\u4E0D\u80FD\u4F7F\u7528\u5B57\u9762\u91CF\u65B9\u5F0F\u521B\u5EFA\uFF0C\u53EA\u80FD\u4F7F\u7528\u6784\u9020\u51FD\u6570\u65B9\u5F0F\u521B\u5EFA)</span>
<span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token string">&#39;AimerFan&#39;</span>
reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@&quot;+type+&quot;@$</span><span class="token regex-delimiter">/</span></span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;@AimerFan@&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;@&quot;&quot;&quot;AimerFannn&quot;@&#39;</span><span class="token punctuation">)</span><span class="token comment">// =&gt; true</span>

reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;^@&#39;</span><span class="token operator">+</span>type<span class="token operator">+</span><span class="token string">&#39;@$&#39;</span><span class="token punctuation">)</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;@AimerFan@&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6B63\u5219\u7684\u6355\u83B7" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u7684\u6355\u83B7" aria-hidden="true">#</a> \u6B63\u5219\u7684\u6355\u83B7</h2><blockquote><p>\u5B9E\u73B0\u6B63\u5219\u6355\u83B7\u7684\u65B9\u6CD5</p><ul><li>\u6B63\u5219\u91CC\u7684\u65B9\u6CD5 RegExp.proptype \u4E0A\u7684\u65B9\u6CD5 <ul><li>exec</li><li>test</li></ul></li><li>\u5B57\u7B26\u4E32 String.proptype \u4E0A\u652F\u6301\u6B63\u5219\u8868\u8FBE\u5F0F\u5904\u7406\u7684\u65B9\u6CD5 <ul><li>replace</li><li>match</li><li>splite</li></ul></li></ul></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B9E\u73B0\u6B63\u5219\u6355\u83B7\u7684\u524D\u63D0\u662F\uFF1A\u5F53\u524D\u5B57\u7B26\u4E32\u8981\u4E0E\u5B57\u7B26\u4E32\u5339\u914D\uFF0C\u5982\u679C\u4E0D\u5339\u914D\uFF0C\u6355\u83B7\u7684\u7ED3\u679C\u662Fnull</span>

<span class="token comment">/*
	\u57FA\u4E8Eexec\u5B9E\u73B0\u6B63\u5219\u7684\u6355\u83B7
		1. \u6355\u83B7\u7684\u7ED3\u679C\u662Fnull\u6216\u8005\u4E00\u4E2A\u6570\u7EC4
			\u7B2C\u4E00\u9879\uFF1A\u672C\u6B21\u6355\u83B7\u5230\u7684\u5185\u5BB9
			\u5176\u4F59\u9879\uFF1A\u5BF9\u5E94\u5C0F\u5206\u7EC4\u672C\u6B21\u5355\u72EC\u6355\u83B7\u7684\u5185\u5BB9
			index\uFF1A\u5F53\u524D\u6355\u83B7\u7684\u7ED3\u679C\u5728\u5B57\u7B26\u4E32\u4E2D\u8D77\u59CB\u7D22\u5F15
			input\uFF1A\u539F\u59CB\u5B57\u7B26\u4E32
        2. \u6BCF\u6267\u884C\u4E00\u6B21exec\u53EA\u80FD\u6355\u83B7\u5230\u4E00\u4E2A\u7B26\u5408\u6B63\u5219\u89C4\u5219\u7684\uFF08\u61D2\u60F0\u6027\uFF09	
        	\u539F\u56E0\u662F\uFF1Areg\u6709\u4E00\u4E2A\u5C5E\u6027lastIndex\uFF0C\u8BE5\u5C5E\u6027\u8868\u793A\u7684\u5F53\u524D\u6B63\u5219\u4E0B\u4E00\u6B21\u5339\u914D\u7684\u8D77\u59CB\u7D22\u5F15\u4F4D\u7F6E\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u8BE5\u53D8\u91CF\u4E0D\u4F1A\u88AB\u4FEE\u6539\uFF0C\u4E14\u9ED8\u8BA4\u4E3A0
        3. \u8BBE\u7F6E\u5168\u5C40\u6A21\u5F0F\u540E \u5339\u914D\u5B8C\u4F1A\u4FEE\u6539 lastIndex \u7684\u503C
        4. \u5F53\u6355\u83B7\u7684\u7ED3\u679C\u4E3A null \u7684\u65F6\u5019 lastIndex \u7684\u503C\u4F1A\u88AB\u4FEE\u6539\u6210 0
        
        \u6CE8\u610F\uFF1Atest \u65B9\u6CD5\u5728 \u5168\u5C40\u5339\u914D \u6A21\u5F0F\u4E0B\u4E5F\u4F1A\u4FEE\u6539 lastIndex \u7684\u503C
*/</span>

<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;AimerFan2019AimerFan2020AimerFan1998&#39;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+</span><span class="token regex-delimiter">/</span></span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>		<span class="token comment">// =&gt; [&quot;2019&quot;, index: 8, input: &quot;AimerFan2019AimerFan2020AimerFan1998&quot;, groups: undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u4E00\u6B21\u6027\u6355\u83B7\u6240\u6709\u5339\u914D\u9879\u65B9\u6CD5</p><ul><li><p>\u5FC5\u987B\u8BBE\u7F6E\u4E3A global \u5168\u5C40\u6A21\u5F0F</p></li><li><p>String.proptype \u4E0A\u7684 match \u65B9\u6CD5\u652F\u6301\u5339\u914D\u6240\u6709\u7B26\u5408\u6B63\u5219\u7684\u7ED3\u679C</p></li></ul></blockquote><h3 id="\u6B63\u5219\u7684\u5206\u7EC4\u6355\u83B7" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u7684\u5206\u7EC4\u6355\u83B7" aria-hidden="true">#</a> \u6B63\u5219\u7684\u5206\u7EC4\u6355\u83B7</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d)(?:\\d|X)$</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;41302619980123691X&#39;</span>
reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">// =&gt; [&quot;41302619980123691X&quot;, &quot;413026&quot;, &quot;1998&quot;, &quot;01&quot;, &quot;23&quot;, &quot;69&quot;, &quot;1&quot;]</span>
<span class="token comment">// \u5982\u679C\u8BBE\u7F6E\u4E86\u5206\u7EC4\uFF08\u6539\u53D8\u4F18\u5148\u7EA7\uFF09\uFF0C\u4F46\u662F\u6355\u83B7\u7684\u65F6\u5019\u4E0D\u9700\u8981\u5355\u72EC\u6355\u83B7\uFF0C\u53EF\u4EE5\u57FA\u4E8E :? \u6765\u5904\u7406</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5373\u8981\u6355\u83B7\u5230{\u6570\u5B57}\uFF0C\u4E5F\u60F3\u5355\u72EC\u7684\u628A\u6570\u7EC4\u4E5F\u6355\u83B7\u5230</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;{0}\u5E74{1}\u6708{2}\u65E5&#39;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\{(\\d+)\\}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>		<span class="token comment">// =&gt; [&quot;{0}&quot;, &quot;0&quot;, index: 0, input: &quot;{0}\u5E74{1}\u6708{2}\u65E5&quot;, groups: undefined]</span>
str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span>		<span class="token comment">// =&gt; [&quot;{0}&quot;, &quot;{1}&quot;, &quot;{2}&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5206\u7EC4\u7684\u7B2C\u4E09\u4E2A\u4F5C\u7528\uFF1A\u5206\u7EC4\u5F15\u7528</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;book&#39;</span> <span class="token comment">// =&gt; &#39;good&#39;, &#39;look&#39;, &#39;moon&#39;, &#39;foot&#39;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]([a-zA-Z])\\1[a-zA-Z]$</span><span class="token regex-delimiter">/</span></span> <span class="token comment">// =&gt; \u5206\u7EC4\u5F15\u7528\u5C31\u662F\u901A\u8FC7 \\\u6570\u5B57 \u8BA9\u5176\u4EE3\u8868\u548C\u5BF9\u5E94\u5206\u7EC4\u51FA\u73B0\u4E00\u6A21\u4E00\u6837\u7684\u5185\u5BB9</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;book&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;deep&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; true</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;some&#39;</span><span class="token punctuation">)</span>		<span class="token comment">// =&gt; false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6B63\u5219\u6355\u83B7\u7684\u8D2A\u5A6A\u6027" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u6355\u83B7\u7684\u8D2A\u5A6A\u6027" aria-hidden="true">#</a> \u6B63\u5219\u6355\u83B7\u7684\u8D2A\u5A6A\u6027</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;AmierFan2019@2020&#39;</span>
<span class="token comment">// \u6B63\u5219\u6355\u83B7\u7684\u8D2A\u5A6A\u6027\uFF1A\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u6B63\u5219\u6355\u83B7\u7684\u65F6\u5019\uFF0C\u662F\u6309\u7167\u5F53\u524D\u6B63\u5219\u6240\u5339\u914D\u7684\u6700\u957F\u7ED3\u679C\u6765\u83B7\u53D6\u7684</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span>		<span class="token comment">// =&gt; [&#39;2019&#39;, &#39;2020&#39;]</span>

<span class="token comment">// \u5728\u91CF\u8BCD\u5143\u5B57\u7B26\u540E\u9762\u8BBE\u7F6E?	\u53D6\u6D88\u6355\u83B7\u65F6\u5019\u7684\u8D2A\u5A6A\u6027\uFF08\u6309\u7167\u6B63\u5219\u5339\u914D\u7684\u6700\u77ED\u7ED3\u679C\u6765\u83B7\u53D6\uFF09</span>
reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+?</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span>		<span class="token comment">// =&gt; [&quot;2&quot;, &quot;0&quot;, &quot;1&quot;, &quot;9&quot;, &quot;2&quot;, &quot;0&quot;, &quot;2&quot;, &quot;0&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5728\u6B63\u5219\u4E2D\u7684\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5728\u6B63\u5219\u4E2D\u7684\u7528\u6CD5" aria-hidden="true">#</a> \uFF1F\u5728\u6B63\u5219\u4E2D\u7684\u7528\u6CD5</h3><ul><li>\u95EE\u53F7\u5DE6\u8FB9\u662F\u975E\u91CF\u8BCD\u5143\u5B57\u7B26\uFF1A\u672C\u8EAB\u4EE3\u8868\u91CF\u8BCD\u5143\u5B57\u7B26\uFF0C\u51FA\u73B0\u96F6\u5230\u4E00\u6B21</li><li>\u95EE\u53F7\u5DE6\u8FB9\u662F\u91CF\u8BCD\u5143\u5B57\u7B26\uFF1A\u53D6\u6D88\u6355\u83B7\u65F6\u5019\u7684\u8D2A\u5A6A\u6027</li><li>(?\u{1F603} \u4E4B\u5339\u914D\u4E0D\u6355\u83B7</li><li>(?=)\u6B63\u5411\u9884\u67E5</li><li>(?!)\u8D1F\u5411\u9884\u67E5</li></ul><h3 id="\u5176\u5B83\u6B63\u5219\u6355\u83B7\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5176\u5B83\u6B63\u5219\u6355\u83B7\u7684\u65B9\u6CD5" aria-hidden="true">#</a> \u5176\u5B83\u6B63\u5219\u6355\u83B7\u7684\u65B9\u6CD5</h3><ol><li><p>test\u4E5F\u80FD\u6355\u83B7\uFF08\u672C\u610F\u662F\u5339\u914D\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;{0}\u5E74{1}\u6708{2}\u65E5&#39;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\{(\\d+)\\}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>				<span class="token comment">// =&gt; true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>RegExc<span class="token punctuation">.</span>$1<span class="token punctuation">)</span>		<span class="token comment">// =&gt; &#39;0&#39;</span>

reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>				<span class="token comment">// =&gt; true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>RegExc<span class="token punctuation">.</span>$1<span class="token punctuation">)</span>		<span class="token comment">// =&gt; &#39;1&#39;</span>

reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>				<span class="token comment">// =&gt; true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>RegExc<span class="token punctuation">.</span>$1<span class="token punctuation">)</span>		<span class="token comment">// =&gt; &#39;2&#39;</span>

reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>				<span class="token comment">// =&gt; false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>RegExc<span class="token punctuation">.</span>$1<span class="token punctuation">)</span>		<span class="token comment">// =&gt; &#39;2&#39;  \u5B58\u50A8\u7684\u662F\u4E0A\u4E00\u6B21\u6355\u83B7\u7684\u7ED3\u679C</span>

<span class="token comment">// RegExc.$1~Reg.$9			==&gt; \u83B7\u53D6\u5F53\u524D\u672C\u6B21\u6B63\u5219\u5339\u914D\u6216\u540E\uFF0C\u7B2C\u4E00\u4E2A\u5230\u7B2C\u4E5D\u4E2A\u5206\u7EC4\u7684\u4FE1\u606F</span>
<span class="token comment">// \u8FD9\u79CD\u65B9\u6CD5\u4FE1\u606F\u5B58\u50A8\u5728\u5168\u5C40\u91CC \u4E0D\u652F\u6301\u591A\u4E2A\u6B63\u5219 \u5982\u4F7F\u7528\u591A\u4E2A\u6B63\u5219 \u8FD9\u56DE\u8986\u76D6\u5F53\u524D\u7684\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>replace \u5B57\u7B26\u4E32\u4E2D\u5B9E\u73B0\u66FF\u6362\u7684\u65B9\u6CD5\uFF08\u4E00\u822C\u90FD\u662F\u4F34\u968F\u6B63\u5219\u4F7F\u7528\u7684\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;AimerFan@1998|AimerFan@2019&#39;</span>
<span class="token comment">// \u628A\u5B57\u7B26\u4E32 AimerFan \u66FF\u6362\u6210 SNL</span>
<span class="token comment">// replace\u65B9\u6CD5\u5728\u66FF\u6362\u7B2C\u4E00\u4E2A\u51FA\u73B0\u7684\u5339\u914D\u9879\u540E\u4F1A\u505C\u6B62</span>
str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;AimerFan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SNL&#39;</span><span class="token punctuation">)</span>	<span class="token comment">// =&gt; SNL@1998|AimerFan@2019</span>

str <span class="token operator">=</span> <span class="token string">&#39;AimerFan@1998|AimerFan@2019&#39;</span>
str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">AimerFan</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;SNL&#39;</span><span class="token punctuation">)</span>	<span class="token comment">// =&gt; SNL@1998|SNL@2019</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u4E9B\u60C5\u51B5\u4E0D\u4F7F\u7528\u6B63\u5219\u65E0\u6CD5\u89E3\u51B3\u95EE\u9898\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;AimerFan@1998|AimerFan@2019&#39;</span>
<span class="token comment">// \u628A\u5B57\u7B26\u4E32 AimerFan \u66FF\u6362\u6210 AimerFanNice</span>
str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;AimerFan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;AimerFanNice&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;AimerFan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;AimerFanNice&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; AimerFanNiceNice@1998|AimerFan@2019</span>
<span class="token comment">// replace\u65B9\u6CD5\u6BCF\u4E00\u6B21\u90FD\u662F\u4ECE\u5B57\u7B26\u4E32\u7684\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u5F00\u59CB\u627E\u7684\uFF08\u7C7B\u4F3C\u4E0E\u6B63\u5219\u6355\u83B7\u7684\u61D2\u60F0\u6027\uFF09</span>

<span class="token comment">// \u57FA\u4E8E\u6B63\u5219\u7684\u5168\u5C40\u6A21\u5F0F g \u53EF\u4EE5\u5B9E\u73B0</span>
str <span class="token operator">=</span> <span class="token string">&#39;AimerFan@1998|AimerFan@2019&#39;</span>
str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">AimerFan</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;AimerFanNice&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; AimerFanNice@1998AimerFanNice@2019</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8B\uFF1A\u628A\u65F6\u95F4\u5B57\u7B26\u4E32\u8FDB\u884C\u5904\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> time <span class="token operator">=</span> <span class="token string">&#39;1998-01-23&#39;</span>
<span class="token comment">// \u53D8\u4E3A 1998\u5E7401\u670823\u65E5</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{4})-(\\d{2})-(\\d{2})$</span><span class="token regex-delimiter">/</span></span>
time <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token string">&#39;$1\u5E74$2\u6708$3\u65E5&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span>	<span class="token comment">// =&gt; 1998\u5E7401\u670823\u65E5</span>


<span class="token comment">// \u7B49\u540C\u4E8E\u8FD9\u6837\u5199 [str].replace([reg], [function])</span>

<span class="token comment">// 1. \u9996\u5148\u62FFreg\u548Ctime\u8FDB\u884C\u5339\u914D\u6355\u83B7\uFF0C\u80FD\u5339\u914D\u5230\u51E0\u6B21\u5C31\u4F1A\u628A\u4F20\u9012\u7684\u51FD\u6570\u6267\u884C\u51E0\u6B21\uFF08\u800C\u4E14\u662F\u5339\u914D\u4E00\u6B21\u5C31\u6267\u884C\u4E00\u6B21\uFF09</span>
<span class="token comment">// 2. \u4E0D\u4EC5\u628A\u65B9\u6CD5\u6267\u884C\u4E86\u3002\u800C\u4E14replace\u8FD8\u7ED9\u65B9\u6CD5\u4F20\u9012\u4E86\u5B9E\u53C2\u4FE1\u606F\uFF08\u548Cexec\u6355\u83B7\u7684\u5185\u5BB9\u4E00\u81F4\u7684\u4FE1\u606F\uFF0C\u6B63\u5219\u5339\u914D\u7684\u5185\u5BB9\uFF0C\u5206\u7EC4\u5339\u914D\u7684\u4FE1\u606F\uFF09</span>
<span class="token comment">// 3. \u5728\u51FD\u6570\u4E2D\u6211\u4EEC\u8FD4\u56DE\u7684\u662F\u4EC0\u4E48\uFF0C\u5C31\u628A\u5F53\u524D\u5339\u914D\u7684\u5185\u5BB9\u66FF\u6362\u6210\u4EC0\u4E48</span>

<span class="token comment">/*
time = time.replace(reg, (result, $1, $2, $3) =&gt; {
    // \u8FD9\u91CC\u7684 $1~$3 \u662F\u6211\u4EEC\u81EA\u5DF1\u8BBE\u7F6E\u7684\u53D8\u91CF
	console.log(result, $1, $2, $3)
})
*/</span>
time <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> <span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC\u7684 $1~$3 \u662F\u6211\u4EEC\u81EA\u5DF1\u8BBE\u7F6E\u7684\u53D8\u91CF</span>
    <span class="token keyword">let</span> <span class="token punctuation">[</span>$1<span class="token punctuation">,</span> $2<span class="token punctuation">,</span> $3<span class="token punctuation">]</span> <span class="token operator">=</span> arg
    $2<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">?</span> $2 <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span><span class="token operator">+</span>$2 <span class="token operator">:</span> <span class="token keyword">null</span>
    $3<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">?</span> $3 <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span><span class="token operator">+</span>$3 <span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token keyword">return</span> $1<span class="token operator">+</span><span class="token string">&#39;\u5E74&#39;</span><span class="token operator">+</span>$2<span class="token operator">+</span><span class="token string">&#39;\u6708&#39;</span><span class="token operator">+</span>$3<span class="token operator">+</span><span class="token string">&#39;\u65E5&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8B\uFF1A\u5355\u8BCD\u9996\u5B57\u6BCD\u5927\u5199</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;good good study, day day up!&#39;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\b([a-zA-Z])[a-zA-Z]*\\b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>

<span class="token comment">// \u51FD\u6570\u6216\u88AB\u6267\u884C\u516D\u6B21\uFF0C\u6BCF\u4E00\u6B21\u90FD\u628A\u6B63\u5219\u5339\u914D\u7684\u4FE1\u606F\u4F20\u9012\u7ED9\u51FD\u6570</span>
<span class="token comment">// \u6BCF\u4E00\u6B21\u7684args: [&#39;good&#39;, &#39;g&#39;] [&#39;good&#39;, &#39;g&#39;] [&#39;study&#39;, &#39;s&#39;] ...</span>
str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">[</span>content<span class="token punctuation">,</span> $1<span class="token punctuation">]</span> <span class="token operator">=</span> args
    $1 <span class="token operator">=</span> $1<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    content <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> $1 <span class="token operator">+</span> content
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8B\uFF1A\u9A8C\u8BC1\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\u54EA\u4E2A\u5B57\u5E55\u51FA\u73B0\u7684\u6B21\u6570\u6700\u591A\uFF0C\u591A\u5C11\u6B21\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;AimerFan, whose realname is SNL&#39;</span>

<span class="token comment">// 1. \u53BB\u91CD\u65B9\u6CD5</span>
<span class="token comment">// \u4F7F\u7528\u4E00\u4E2A\u5BF9\u8C61\u4FDD\u5B58\u4FE1\u606F key\u4E3A\u6BCF\u4E2A\u5B57\u7B26 value\u4E3A\u51FA\u73B0\u7684\u6B21\u6570</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token parameter">char</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>char<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        obj<span class="token punctuation">[</span>char<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    obj<span class="token punctuation">[</span>char<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> item <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    item <span class="token operator">&gt;</span> max <span class="token operator">?</span> max <span class="token operator">=</span> item <span class="token operator">:</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> item <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">===</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u51FA\u73B0\u6B21\u6570\u6700\u591A\u7684\u5B57\u7B26\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\uFF0C\u51FA\u73B0\u7684\u6B21\u6570</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>max<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6B21</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;AimerFan, whose realname is SNL&#39;</span>
<span class="token comment">// \u6392\u5E8F</span>
str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; &quot;   aaaAeeeFiilLmmnnNrrsS&quot;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([a-zA-Z])\\1+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">ig</span></span>
<span class="token keyword">let</span> array <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span> <span class="token comment">// =&gt; [&quot;aaaA&quot;, &quot;eee&quot;, &quot;ii&quot;, &quot;lL&quot;, &quot;mm&quot;, &quot;nnN&quot;, &quot;rr&quot;, &quot;sS&quot;]</span>
array<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span>length <span class="token operator">-</span> a<span class="token punctuation">.</span>length<span class="token punctuation">)</span>

<span class="token keyword">let</span> max <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length
<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>lenrth<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> item <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u51FA\u73B0\u6B21\u6570\u6700\u591A\u7684\u5B57\u7B26\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\uFF0C\u51FA\u73B0\u7684\u6B21\u6570</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>max<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u6B21</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,31),c=[p];function o(l,i){return s(),a("div",null,c)}var u=n(t,[["render",o],["__file","regexp.html.vue"]]);export{u as default};
